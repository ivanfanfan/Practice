1. 动态数组
2. 链表
    单向链表
    带哨兵单向链表
    双向链表
    双向循环链表
3. 栈

4. 队列

4.1. 双向队列
4.2. 优先队列
实现：
    无序数组
    有序数组
    堆

4.3. 阻塞队列


5. 堆
概念：堆是一种基于树的数据结构，通常用完全二叉树实现。
特性：
    大顶堆中，任意节点C与它的父亲节点P符合P.value>=C.value
    小顶堆中，任意节点C与它的父亲节点P符合P.value<=C.value
    顶层节点root
父子节点的特性：
    如果从索引0开始存储节点数据
        节点i的父节点为floor((i-1)/2),当i>0时
        节点i的左子节点为2i+1，右子节点为2i+2，当然它们得<size
    如果从索引1开始存储节点数据
        节点i的父节点为floor(i/2),当i>0时
                节点i的左子节点为2i，右子节点为2i+1，当然它们得<size
方法：
    节点上浮：与父节点比较，交换位置
    节点下沉：与两个子节点中较大的（大顶堆）交换位置。
建堆方法：
    Floyd算法：找到最后一个非叶子节点，依次往后进行下沉。时间复杂度 O(n)。
    威廉莫斯算法： 将每个元素依次比较加入堆中。时间复杂度O(n*logn)。
建堆特性：
    找最后一个非叶子节点的 size/2 -1，往后依次下沉直到root


6. 二叉树
遍历：
    深度优先遍历
    广度优先遍历
深度优先遍历：
    先序：父左右
    中序：左父右
    后序：左右父

